/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CCMUtils,
  CCMUtilsInterface,
} from "../../../contracts/messaging/CCMUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "fromChainId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "toChainid",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "_generateTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "chainId",
        type: "uint128",
      },
    ],
    name: "chains",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nativeTokenFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "erc20Fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "relayerShare",
        type: "uint16",
      },
    ],
    name: "initiate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRelayerPaymentInERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "received",
    outputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "fromChainId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "toChainId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "signatures",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "sender",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "relayers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selfChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "sent",
    outputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "fromChainId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "toChainId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "contr",
        type: "address",
      },
      {
        internalType: "string",
        name: "receiver",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161147d61003e60003960008181610a0e01528181610a370152610c65015261147d6000f3fe60806040526004361061012d5760003560e01c80638820446f116100a5578063c1f0808a11610074578063e22fe72f11610059578063e22fe72f1461039e578063e66f0a771461041e578063f851a4401461045257610165565b8063c1f0808a1461035b578063cc9e3e891461038857610165565b80638820446f146102a1578063a9ab9506146102d5578063aae8e9ed146102ef578063ad3cb1cc1461030557610165565b806342cde4e8116100fc57806352d1902d116100e157806352d1902d146102155780635300f8411461022a5780635c975abb1461026a57610165565b806342cde4e8146101ec5780634f1ef2861461020257610165565b8063140753601461016d5780631b06bf9f1461018d5780631e850545146101b6578063253e4493146101cc57610165565b366101655761013a61048f565b61016360017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b005b61013a61048f565b34801561017957600080fd5b50610163610188366004610fe0565b610536565b34801561019957600080fd5b506101a360015481565b6040519081526020015b60405180910390f35b3480156101c257600080fd5b506101a360025481565b3480156101d857600080fd5b506101a36101e736600461111e565b610755565b3480156101f857600080fd5b506101a360055481565b610163610210366004611198565b610794565b34801561022157600080fd5b506101a36107b3565b34801561023657600080fd5b5061025a6102453660046111e6565b60126020526000908152604090205460ff1681565b60405190151581526020016101ad565b34801561027657600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661025a565b3480156102ad57600080fd5b506102c16102bc366004611201565b6107e2565b6040516101ad98979695949392919061126a565b3480156102e157600080fd5b5060005461025a9060ff1681565b3480156102fb57600080fd5b506101a360045481565b34801561031157600080fd5b5061034e6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101ad91906112e7565b34801561036757600080fd5b506101a3610376366004611201565b60106020526000908152604090205481565b34801561039457600080fd5b506101a360035481565b3480156103aa57600080fd5b506103f86103b93660046112fa565b600f60205260009081526040902080546001909101546001600160a01b0381169074010000000000000000000000000000000000000000900460ff1683565b604080519384526001600160a01b03909216602084015260ff16908201526060016101ad565b34801561042a57600080fd5b5061043e610439366004611201565b610968565b6040516101ad989796959493929190611315565b34801561045e57600080fd5b506000546104779061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0161050a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156105815750825b905060008267ffffffffffffffff16600114801561059e5750303b155b9050811580156105ac575080155b156105e3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561062e57845468ff00000000000000001916680100000000000000001785555b6106366109d9565b61063e6109e3565b6106466109f3565b60008054466003557fffffffffffffffffffffff00000000000000000000000000000000000000000016336101000260ff1916179055600680547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b038d81169190911790925560078b905560088a9055600b8054909116918916919091179055600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff8816179055831561074957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b60008686868686866040516020016107729695949392919061136c565b6040516020818303038152906040528051906020012090509695505050505050565b61079c610a03565b6107a582610ad3565b6107af8282610b54565b5050565b60006107bd610c5a565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b601360205260009081526040902080546001820154600283015460038401546004850154600586018054959694956fffffffffffffffffffffffffffffffff8086169670010000000000000000000000000000000090960416946001600160a01b0394851694909316929190610857906113bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610883906113bf565b80156108d05780601f106108a5576101008083540402835291602001916108d0565b820191906000526020600020905b8154815290600101906020018083116108b357829003601f168201915b5050505050908060060180546108e5906113bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610911906113bf565b801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b5050505050905088565b601160205260009081526040902080546001820154600283015460038401546004850154600586018054959694956fffffffffffffffffffffffffffffffff8086169670010000000000000000000000000000000090960416946001600160a01b03909416939190610857906113bf565b6109e1610cbc565b565b6109eb610cbc565b6109e1610d23565b6109fb610cbc565b6109e1610d2b565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a9c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a907f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b156109e1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005461010090046001600160a01b03163314610b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064015b60405180910390fd5b50565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bae575060408051601f3d908101601f19168201909252610bab91810190611412565b60015b610bef576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610b48565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610c4b576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610b48565b610c558383610d5e565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166109e1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610510610cbc565b610d33610cbc565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b610d6782610db4565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610dac57610c558282610e5c565b6107af610ed2565b806001600160a01b03163b600003610e03576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610b48565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051610e79919061142b565b600060405180830381855af49150503d8060008114610eb4576040519150601f19603f3d011682016040523d82523d6000602084013e610eb9565b606091505b5091509150610ec9858383610f0a565b95945050505050565b34156109e1576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606082610f1f57610f1a82610f82565b610f7b565b8151158015610f3657506001600160a01b0384163b155b15610f78576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610b48565b50805b9392505050565b805115610f925780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80356001600160a01b0381168114610fdb57600080fd5b919050565b600080600080600060a08688031215610ff857600080fd5b61100186610fc4565b9450602086013593506040860135925061101d60608701610fc4565b9150608086013561ffff8116811461103457600080fd5b809150509295509295909350565b80356fffffffffffffffffffffffffffffffff81168114610fdb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126110a257600080fd5b813567ffffffffffffffff808211156110bd576110bd611062565b604051601f8301601f19908116603f011681019082821181831017156110e5576110e5611062565b816040528381528660208588010111156110fe57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561113757600080fd5b61114087611042565b955061114e60208801611042565b945060408701359350606087013592506080870135915060a087013567ffffffffffffffff81111561117f57600080fd5b61118b89828a01611091565b9150509295509295509295565b600080604083850312156111ab57600080fd5b6111b483610fc4565b9150602083013567ffffffffffffffff8111156111d057600080fd5b6111dc85828601611091565b9150509250929050565b6000602082840312156111f857600080fd5b610f7b82610fc4565b60006020828403121561121357600080fd5b5035919050565b60005b8381101561123557818101518382015260200161121d565b50506000910152565b6000815180845261125681602086016020860161121a565b601f01601f19169290920160200192915050565b888152602081018890526fffffffffffffffffffffffffffffffff8781166040830152861660608201526001600160a01b038581166080830152841660a082015261010060c082018190526000906112c48382018661123e565b905082810360e08401526112d8818561123e565b9b9a5050505050505050505050565b602081526000610f7b602083018461123e565b60006020828403121561130c57600080fd5b610f7b82611042565b60006101008a83528960208401526fffffffffffffffffffffffffffffffff808a1660408501528089166060850152506001600160a01b03871660808401528560a08401528060c08401526112c48184018661123e565b60006fffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015283608083015260c060a08301526113b360c083018461123e565b98975050505050505050565b600181811c908216806113d357607f821691505b60208210810361140c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561142457600080fd5b5051919050565b6000825161143d81846020870161121a565b919091019291505056fea2646970667358221220905fc5bdf674eb4a90b58bc41523846c5bbfa8add8fc4165aed9d93d44fb8d3364736f6c63430008180033";

type CCMUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCMUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCMUtils__factory extends ContractFactory {
  constructor(...args: CCMUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CCMUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCMUtils__factory {
    return super.connect(runner) as CCMUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCMUtilsInterface {
    return new Interface(_abi) as CCMUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CCMUtils {
    return new Contract(address, _abi, runner) as unknown as CCMUtils;
  }
}
