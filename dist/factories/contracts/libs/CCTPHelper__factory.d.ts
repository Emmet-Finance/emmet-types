import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { CCTPHelper, CCTPHelperInterface } from "../../../contracts/libs/CCTPHelper";
type CCTPHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CCTPHelper__factory extends ContractFactory {
    constructor(...args: CCTPHelperConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<CCTPHelper & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): CCTPHelper__factory;
    static readonly bytecode = "0x610b3161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80638fbb3be7116100655780638fbb3be714610104578063dfbd577614610126578063edfd36cd14610146578063fc7793da1461015b57600080fd5b80633d94bee51461008c57806346117830146100b65780637b04c181146100e9575b600080fd5b61009f61009a366004610827565b61017b565b6040516100ad9291906108b4565b60405180910390f35b6100d1739f3b8679c73c2fef8b59b4f3444d4e156fb70aa581565b6040516001600160a01b0390911681526020016100ad565b6100d1737865fafc2db2093669d92c0f33aeef291086befd81565b81801561011057600080fd5b5061012461011f3660046108e2565b61019c565b005b81801561013257600080fd5b50610124610141366004610949565b61040e565b81801561015257600080fd5b506101246104ff565b61016e610169366004610949565b610591565b6040516100ad91906109ad565b606080828060200190518101906101929190610a0c565b9094909350915050565b6101a5846105cf565b6101ae826105cf565b6101b78561062f565b6101d4739f3b8679c73c2fef8b59b4f3444d4e156fb70aa561062f565b6040516323b872dd60e01b8152336004820152306024820152604481018590526000906001600160a01b038716906323b872dd906064016020604051808303816000875af115801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e9190610a66565b9050806102bf5760405163135e2cbf60e21b815260206004820152603360248201527f546f6b656e207472616e736665722066726f6d20746865207573657220746f206044820152721d1a194818dbdb9d1c9858dd0819985a5b1959606a1b60648201526084015b60405180910390fd5b6001600160a01b03861663095ea7b3739f3b8679c73c2fef8b59b4f3444d4e156fb70aa56102ed8589610a88565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610a66565b50739f3b8679c73c2fef8b59b4f3444d4e156fb70aa5636fd3504e6103818488610a88565b6040516001600160e01b031960e084901b168152600481019190915263ffffffff87166024820152604481018690526001600160a01b03891660648201526084016020604051808303816000875af11580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610aaf565b50505050505050565b61042b737865fafc2db2093669d92c0f33aeef291086befd61062f565b61043482610686565b61043d816106f8565b604051630afd9fa560e31b8152737865fafc2db2093669d92c0f33aeef291086befd906357ecfd289061047690859085906004016108b4565b6020604051808303816000875af1158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b99190610a66565b6104fb5760405163135e2cbf60e21b8152602060048201526012602482015271151bdad95b8810db185a5b4811985a5b195960721b60448201526064016102b6565b5050565b6040514790600090339083908381818185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b50509050806104fb5760405163135e2cbf60e21b815260206004820152601460248201527310dbda5b881dda5d1a191c985dc819985a5b195960621b60448201526064016102b6565b606061059c83610686565b6105a5826106f8565b82826040516020016105b89291906108b4565b604051602081830303815290604052905092915050565b8061062c5760405163135e2cbf60e21b815260206004820152602660248201527f616d6f756e74206f72206d696e74526563697069656e742063616e6e6f74206260448201526565207a65726f60d01b60648201526084016102b6565b50565b6001600160a01b03811661062c5760405163135e2cbf60e21b815260206004820181905260248201527f436f6e747261637420616464726573732063616e6e6f74206265207a65726f2e60448201526064016102b6565b60f68151101561062c5760405163135e2cbf60e21b815260206004820152603660248201527f6d65737361676542797465732e6c656e677468203c206d696e4d6573736167656044820152754c656e67746820283834202b203332202b203133302960501b60648201526084016102b6565b604181516107069190610ad9565b1561062c5760405163135e2cbf60e21b815260206004820152602560248201527f6174746573746174696f6e5369676e61747572652e6c656e6774682025203635604482015264020213d20360dc1b60648201526084016102b6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107a1576107a1610762565b604052919050565b600067ffffffffffffffff8211156107c3576107c3610762565b50601f01601f191660200190565b600082601f8301126107e257600080fd5b81356107f56107f0826107a9565b610778565b81815284602083860101111561080a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561083957600080fd5b813567ffffffffffffffff81111561085057600080fd5b61085c848285016107d1565b949350505050565b60005b8381101561087f578181015183820152602001610867565b50506000910152565b600081518084526108a0816020860160208601610864565b601f01601f19169290920160200192915050565b6040815260006108c76040830185610888565b82810360208401526108d98185610888565b95945050505050565b600080600080600060a086880312156108fa57600080fd5b85356001600160a01b038116811461091157600080fd5b945060208601359350604086013563ffffffff8116811461093157600080fd5b94979396509394606081013594506080013592915050565b6000806040838503121561095c57600080fd5b823567ffffffffffffffff8082111561097457600080fd5b610980868387016107d1565b9350602085013591508082111561099657600080fd5b506109a3858286016107d1565b9150509250929050565b6020815260006109c06020830184610888565b9392505050565b600082601f8301126109d857600080fd5b81516109e66107f0826107a9565b8181528460208386010111156109fb57600080fd5b61085c826020830160208701610864565b60008060408385031215610a1f57600080fd5b825167ffffffffffffffff80821115610a3757600080fd5b610a43868387016109c7565b93506020850151915080821115610a5957600080fd5b506109a3858286016109c7565b600060208284031215610a7857600080fd5b815180151581146109c057600080fd5b81810381811115610aa957634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215610ac157600080fd5b815167ffffffffffffffff811681146109c057600080fd5b600082610af657634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220f72f737457e6c0e59a6e411a9b8b100d4aa7f8b5b3c6f20603cdcc4360aa607064736f6c63430008180033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "CCTPHelperError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "decodeClaimParams";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "messageBytes";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "attestationSignature";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "messageBytes";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "attestationSignature";
            readonly type: "bytes";
        }];
        readonly name: "encodeClaimParams";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "combined";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "messageTransmitter";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenMessenger";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): CCTPHelperInterface;
    static connect(address: string, runner?: ContractRunner | null): CCTPHelper;
}
export {};
