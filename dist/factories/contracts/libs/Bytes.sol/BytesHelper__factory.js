"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BytesHelper__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "length",
                type: "uint256",
            },
        ],
        name: "StringIsTooLong",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes16",
                name: "encoded",
                type: "bytes16",
            },
        ],
        name: "bytes16ToString",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "one",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "two",
                type: "bytes32",
            },
        ],
        name: "decode2xBytes32",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "part1",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "part2",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BytesHelper.Data",
                name: "data",
                type: "tuple",
            },
        ],
        name: "decode64Bytes",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "str",
                type: "string",
            },
        ],
        name: "encode64String",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "part1",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "part2",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BytesHelper.Data",
                name: "encoded",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x6108f861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630b2fde251461005b57806345fb6634146100845780638f9e2e4e14610097578063d46a57d5146100aa575b600080fd5b61006e610069366004610645565b6100d8565b60405161007b919061068b565b60405180910390f35b61006e6100923660046106d4565b61013a565b61006e6100a5366004610723565b610189565b6100bd6100b836600461075d565b610273565b6040805182518152602092830151928101929092520161007b565b604080518082019091528281526020810182905260609060006100fa856104a0565b9050600061010b83602001516104a0565b9050818160405160200161012092919061080e565b604051602081830303815290604052935050505092915050565b6060600061014b83600001516104a0565b9050600061015c84602001516104a0565b9050818160405160200161017192919061080e565b60405160208183030381529060405292505050919050565b606060005b6010811080156101bc57508281601081106101ab576101ab61083d565b1a60f81b6001600160f81b03191615155b156101d1576101ca81610869565b905061018e565b60008167ffffffffffffffff8111156101ec576101ec6106be565b6040519080825280601f01601f191660200182016040528015610216576020820181803683370190505b50905060005b8281101561026b578481601081106102365761023661083d565b1a60f81b82828151811061024c5761024c61083d565b60200101906001600160f81b031916908160001a90535060010161021c565b509392505050565b6040805180820190915260008082526020820152815182906002811180156102c05750816000815181106102a9576102a961083d565b6020910101516001600160f81b031916600360fc1b145b80156102f15750816001815181106102da576102da61083d565b6020910101516001600160f81b031916600f60fb1b145b156103125761030284600283610582565b915061030f600282610882565b90505b604081111561033b5760405163072275ef60e01b81526004810182905260240160405180910390fd5b6020811161036b57600061034e8561089b565b604080518082019091529081526000602082015293506104999050565b60408051602080825281830190925260009160208201818036833750506040805160208082528183019092529293506000929150808201818036833701905050905060005b6020811015610407578481815181106103cb576103cb61083d565b602001015160f81c60f81b8382815181106103e8576103e861083d565b60200101906001600160f81b031916908160001a9053506001016103b0565b5060205b845181101561046e578481815181106104265761042661083d565b602001015160f81c60f81b8260208361043f9190610882565b8151811061044f5761044f61083d565b60200101906001600160f81b031916908160001a90535060010161040b565b506040518060400160405280836104849061089b565b81526020016104928361089b565b9052945050505b5050919050565b606060005b6020811080156104d357508281602081106104c2576104c261083d565b1a60f81b6001600160f81b03191615155b156104e8576104e181610869565b90506104a5565b60008167ffffffffffffffff811115610503576105036106be565b6040519080825280601f01601f19166020018201604052801561052d576020820181803683370190505b50905060005b8281101561026b5784816020811061054d5761054d61083d565b1a60f81b8282815181106105635761056361083d565b60200101906001600160f81b031916908160001a905350600101610533565b60608360006105918585610882565b67ffffffffffffffff8111156105a9576105a96106be565b6040519080825280601f01601f1916602001820160405280156105d3576020820181803683370190505b509050845b8481101561063b578281815181106105f2576105f261083d565b01602001516001600160f81b0319168261060c8884610882565b8151811061061c5761061c61083d565b60200101906001600160f81b031916908160001a9053506001016105d8565b5095945050505050565b6000806040838503121561065857600080fd5b50508035926020909101359150565b60005b8381101561068257818101518382015260200161066a565b50506000910152565b60208152600082518060208401526106aa816040850160208701610667565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b6000604082840312156106e657600080fd5b6040516040810181811067ffffffffffffffff82111715610709576107096106be565b604052823581526020928301359281019290925250919050565b60006020828403121561073557600080fd5b81356fffffffffffffffffffffffffffffffff198116811461075657600080fd5b9392505050565b60006020828403121561076f57600080fd5b813567ffffffffffffffff8082111561078757600080fd5b818401915084601f83011261079b57600080fd5b8135818111156107ad576107ad6106be565b604051601f8201601f19908116603f011681019083821181831017156107d5576107d56106be565b816040528281528760208487010111156107ee57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008351610820818460208801610667565b835190830190610834818360208801610667565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161087b5761087b610853565b5060010190565b8181038181111561089557610895610853565b92915050565b805160208083015191908110156108bc576000198160200360031b1b821691505b5091905056fea2646970667358221220a71993b5dcdc96f83e01ad49e8aaf40811b202d99b4d1c446c5c9382e908b12164736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class BytesHelper__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BytesHelper__factory = BytesHelper__factory;
BytesHelper__factory.bytecode = _bytecode;
BytesHelper__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnl0ZXNIZWxwZXJfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZmFjdG9yaWVzL2NvbnRyYWN0cy9saWJzL0J5dGVzLnNvbC9CeXRlc0hlbHBlcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtQ0FLZ0I7QUFRaEIsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxpQkFBaUI7UUFDdkIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFFBQVE7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRSxRQUFRO2FBQ2Y7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEtBQUs7Z0JBQ1gsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEtBQUs7Z0JBQ1gsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxpQkFBaUI7UUFDdkIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFFB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