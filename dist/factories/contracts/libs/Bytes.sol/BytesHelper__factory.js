"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BytesHelper__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "length",
                type: "uint256",
            },
        ],
        name: "StringIsTooLong",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes16",
                name: "encoded",
                type: "bytes16",
            },
        ],
        name: "bytes16ToString",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "one",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "two",
                type: "bytes32",
            },
        ],
        name: "decode2xBytes32",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "part1",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "part2",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BytesHelper.Data",
                name: "data",
                type: "tuple",
            },
        ],
        name: "decode64Bytes",
        outputs: [
            {
                internalType: "string",
                name: "decoded",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "str",
                type: "string",
            },
        ],
        name: "encode64String",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "part1",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "part2",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BytesHelper.Data",
                name: "encoded",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x610a65610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80630b2fde251461005b57806345fb6634146100845780638f9e2e4e14610097578063d46a57d5146100aa575b600080fd5b61006e610069366004610786565b6100d8565b60405161007b91906107cc565b60405180910390f35b61006e610092366004610846565b61013a565b61006e6100a5366004610897565b610189565b6100bd6100b83660046108e0565b6102a3565b6040805182518152602092830151928101929092520161007b565b604080518082019091528281526020810182905260609060006100fa85610581565b9050600061010b8360200151610581565b9050818160405160200161012092919061097a565b604051602081830303815290604052935050505092915050565b6060600061014b8360000151610581565b9050600061015c8460200151610581565b9050818160405160200161017192919061097a565b60405160208183030381529060405292505050919050565b606060005b6010811080156101d457508281601081106101ab576101ab6109a9565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b156101e9576101e2816109d5565b905061018e565b60008167ffffffffffffffff811115610204576102046107ff565b6040519080825280601f01601f19166020018201604052801561022e576020820181803683370190505b50905060005b8281101561029b5784816010811061024e5761024e6109a9565b1a60f81b828281518110610264576102646109a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610234565b509392505050565b6040805180820190915260008082526020820152815182906002811180156103245750816000815181106102d9576102d96109a9565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f3000000000000000000000000000000000000000000000000000000000000000145b801561038957508160018151811061033e5761033e6109a9565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f7800000000000000000000000000000000000000000000000000000000000000145b156103aa5761039a84600283610693565b91506103a76002826109ef565b90505b60408111156103ec576040517f072275ef0000000000000000000000000000000000000000000000000000000081526004810182905260240160405180910390fd5b6020811161041c5760006103ff85610a08565b6040805180820190915290815260006020820152935061057a9050565b60408051602080825281830190925260009160208201818036833750506040805160208082528183019092529293506000929150808201818036833701905050905060005b60208110156104d05784818151811061047c5761047c6109a9565b602001015160f81c60f81b838281518110610499576104996109a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610461565b5060205b845181101561054f578481815181106104ef576104ef6109a9565b602001015160f81c60f81b8260208361050891906109ef565b81518110610518576105186109a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016104d4565b5060405180604001604052808361056590610a08565b815260200161057383610a08565b9052945050505b5050919050565b606060005b6020811080156105cc57508281602081106105a3576105a36109a9565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b156105e1576105da816109d5565b9050610586565b60008167ffffffffffffffff8111156105fc576105fc6107ff565b6040519080825280601f01601f191660200182016040528015610626576020820181803683370190505b50905060005b8281101561029b57848160208110610646576106466109a9565b1a60f81b82828151811061065c5761065c6109a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060010161062c565b60608360006106a285856109ef565b67ffffffffffffffff8111156106ba576106ba6107ff565b6040519080825280601f01601f1916602001820160405280156106e4576020820181803683370190505b509050845b8481101561077c57828181518110610703576107036109a9565b01602001517fff00000000000000000000000000000000000000000000000000000000000000168261073588846109ef565b81518110610745576107456109a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016106e9565b5095945050505050565b6000806040838503121561079957600080fd5b50508035926020909101359150565b60005b838110156107c35781810151838201526020016107ab565b50506000910152565b60208152600082518060208401526107eb8160408501602087016107a8565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561083e5761083e6107ff565b604052919050565b6000604082840312801561085957600080fd5b506040805190810167ffffffffffffffff8111828210171561087d5761087d6107ff565b604052823581526020928301359281019290925250919050565b6000602082840312156108a957600080fd5b81357fffffffffffffffffffffffffffffffff00000000000000000000000000000000811681146108d957600080fd5b9392505050565b6000602082840312156108f257600080fd5b813567ffffffffffffffff81111561090957600080fd5b8201601f8101841361091a57600080fd5b803567ffffffffffffffff811115610934576109346107ff565b6109476020601f19601f84011601610815565b81815285602083850101111561095c57600080fd5b81602084016020830137600091810160200191909152949350505050565b6000835161098c8184602088016107a8565b8351908301906109a08183602088016107a8565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982036109e8576109e86109bf565b5060010190565b81810381811115610a0257610a026109bf565b92915050565b80516020808301519190811015610a29576000198160200360031b1b821691505b5091905056fea26469706673582212209b83b0dead514dda85194b658e2940b12bd00914f1c4010c3428a0ad4d2d608664736f6c634300081a0033";
const isSuperArgs = (xs) => xs.length > 1;
class BytesHelper__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BytesHelper__factory = BytesHelper__factory;
BytesHelper__factory.bytecode = _bytecode;
BytesHelper__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnl0ZXNIZWxwZXJfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZmFjdG9yaWVzL2NvbnRyYWN0cy9saWJzL0J5dGVzLnNvbC9CeXRlc0hlbHBlcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtQ0FLZ0I7QUFRaEIsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxpQkFBaUI7UUFDdkIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFFBQVE7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRSxRQUFRO2FBQ2Y7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEtBQUs7Z0JBQ1gsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEtBQUs7Z0JBQ1gsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxpQkFBaUI7UUFDdkIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFFB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