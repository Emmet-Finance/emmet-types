"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmmetTokenStrategy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "message",
                type: "string",
            },
        ],
        name: "EmmetTokenStrategyError",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "toChainId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "fromToken",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "toToken",
                type: "string",
            },
            {
                components: [
                    {
                        internalType: "enum EmmetTokenStrategy.Step[]",
                        name: "localSteps",
                        type: "uint8[]",
                    },
                    {
                        internalType: "enum EmmetTokenStrategy.Step[]",
                        name: "foreignSteps",
                        type: "uint8[]",
                    },
                ],
                indexed: false,
                internalType: "struct EmmetTokenStrategy.CrossChainStrategy",
                name: "oldStrategies",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum EmmetTokenStrategy.Step[]",
                        name: "localSteps",
                        type: "uint8[]",
                    },
                    {
                        internalType: "enum EmmetTokenStrategy.Step[]",
                        name: "foreignSteps",
                        type: "uint8[]",
                    },
                ],
                indexed: false,
                internalType: "struct EmmetTokenStrategy.CrossChainStrategy",
                name: "newStrategies",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "string",
                name: "operation",
                type: "string",
            },
        ],
        name: "CrossChainPathUpdate",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "fromToken",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "toToken",
                type: "string",
            },
            {
                indexed: false,
                internalType: "enum EmmetTokenStrategy.Step[]",
                name: "oldLocalSteps",
                type: "uint8[]",
            },
            {
                indexed: false,
                internalType: "enum EmmetTokenStrategy.Step[]",
                name: "newLocalSteps",
                type: "uint8[]",
            },
            {
                indexed: false,
                internalType: "string",
                name: "operation",
                type: "string",
            },
        ],
        name: "IncommingPathUpdate",
        type: "event",
    },
];
const _bytecode = "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059cec9f0ddb1f33f8161556648c592dfb2141fe7b464724271236f540c70f82864736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class EmmetTokenStrategy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.EmmetTokenStrategy__factory = EmmetTokenStrategy__factory;
EmmetTokenStrategy__factory.bytecode = _bytecode;
EmmetTokenStrategy__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW1tZXRUb2tlblN0cmF0ZWd5X19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2ZhY3Rvcmllcy9jb250cmFjdHMvbGlicy9Ub2tlblN0cmF0ZWd5LnNvbC9FbW1ldFRva2VuU3RyYXRlZ3lfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbUNBS2dCO0FBUWhCLE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsUUFBUTtnQkFDdEIsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsSUFBSSxFQUFFLFFBQVE7YUFDZjtTQUNGO1FBQ0QsSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsS0FBSztnQkFDZCxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsWUFBWSxFQUFFLFFBQVE7Z0JBQ3RCLElBQUksRUFBRSxXQUFXO2dCQUNqQixJQUFJLEVBQUUsUUFBUTthQUNmO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsWUFBWSxFQUFFLFFBQVE7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRSxRQUFRO2FBQ2Y7WUFDRDtnQkFDRSxVQUFVLEVBQUU7b0JBQ1Y7d0JBQ0UsWUFBWSxFQUFFLGdDQUFnQzt3QkFDOUMsSUFBSSxFQUFFLFlBQVk7d0JBQ2xCLElBQUksRUFBRSxTQUFTO3FCQUNoQjtvQkFDRDt3QkFDRSxZQUFZLEVBQUUsZ0NBQWdDO3dCQUM5QyxJQUFJLEVBQUUsY0FB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