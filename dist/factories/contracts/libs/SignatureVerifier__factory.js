"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureVerifier__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "DataIsTooShort",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "thisChainId",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "provided",
                type: "uint64",
            },
        ],
        name: "WrongDestinationChain",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "decodeCommonData",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "fromChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "toChainId",
                        type: "uint64",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "fromToken",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "toToken",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "recipient",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "fromChainHash",
                        type: "string",
                    },
                ],
                internalType: "struct SignatureVerifier.DecodedData",
                name: "decoded",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "fromChainId",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "toChainId",
                type: "uint64",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "fromToken",
                type: "string",
            },
            {
                internalType: "string",
                name: "toToken",
                type: "string",
            },
            {
                internalType: "string",
                name: "recipient",
                type: "string",
            },
            {
                internalType: "string",
                name: "fromChainHash",
                type: "string",
            },
        ],
        name: "encodeCommonData",
        outputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "addr_",
                type: "string",
            },
        ],
        name: "stringToAddress",
        outputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "signer",
                type: "address",
            },
        ],
        name: "verifyLocalSignature",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "signer",
                type: "address",
            },
        ],
        name: "verifySignature",
        outputs: [
            {
                internalType: "bool",
                name: "result",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x610c4a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806315706fdf146100665780635aa7e789146100965780636e718888146100b6578063786568da146100d957806380e16031146100ec575b600080fd5b6100796100743660046106d5565b61010c565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a96100a4366004610739565b6102f9565b60405161008d9190610860565b6100c96100c436600461087a565b610334565b604051901515815260200161008d565b6100c96100e736600461087a565b61039f565b6100ff6100fa3660046106d5565b61042b565b60405161008d91906108fd565b60008181808060025b602a8110156102ee5761012a610100856109c1565b935084818151811061013e5761013e6109f3565b016020015160f81c925084610154826001610a09565b81518110610164576101646109f3565b016020015160f81c915060616001600160a01b0384161080159061019257506066836001600160a01b031611155b156101a9576101a2605784610a22565b9250610214565b6030836001600160a01b0316101580156101cd57506039836001600160a01b031611155b156101dd576101a2603084610a22565b6041836001600160a01b03161015801561020157506046836001600160a01b031611155b1561021457610211603784610a22565b92505b6061826001600160a01b03161015801561023857506066826001600160a01b031611155b1561024f57610248605783610a22565b91506102ba565b6030826001600160a01b03161015801561027357506039826001600160a01b031611155b1561028357610248603083610a22565b6041826001600160a01b0316101580156102a757506046826001600160a01b031611155b156102ba576102b7603783610a22565b91505b816102c68460106109c1565b6102d09190610a49565b6102da9085610a49565b93506102e7600282610a09565b9050610115565b509195945050505050565b6060878787878787876040516020016103189796959493929190610a69565b6040516020818303038152906040529050979650505050505050565b6000806103408461042b565b90504681602001516001600160401b03161461038b576020810151604051638b0d417760e01b81524660048201526001600160401b0390911660248201526044015b60405180910390fd5b61039685858561039f565b95945050505050565b8151602083012060009081610401826040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050836001600160a01b0316610417828861050a565b6001600160a01b0316149695505050505050565b61047d6040518060e0016040528060006001600160401b0316815260200160006001600160401b0316815260200160008152602001606081526020016060815260200160608152602001606081525090565b60b0825110156104a057604051631f5a55b960e11b815260040160405180910390fd5b6000806000806000806000888060200190518101906104bf9190610b33565b6040805160e0810182526001600160401b039889168152979096166020880152948601939093526060850191909152608084015260a083015260c08201529998505050505050505050565b60008060008061051985610589565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610574573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146105df5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610382565b50505060208101516040820151606083015160001a601b81101561060b57610608601b82610bfb565b90505b9193909250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561065057610650610612565b604052919050565b60006001600160401b0382111561067157610671610612565b50601f01601f191660200190565b600082601f83011261069057600080fd5b81356106a361069e82610658565b610628565b8181528460208386010111156106b857600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156106e757600080fd5b81356001600160401b038111156106fd57600080fd5b6107098482850161067f565b949350505050565b6001600160401b038116811461072657600080fd5b50565b803561073481610711565b919050565b600080600080600080600060e0888a03121561075457600080fd5b61075d88610729565b965061076b60208901610729565b95506040880135945060608801356001600160401b038082111561078e57600080fd5b61079a8b838c0161067f565b955060808a01359150808211156107b057600080fd5b6107bc8b838c0161067f565b945060a08a01359150808211156107d257600080fd5b6107de8b838c0161067f565b935060c08a01359150808211156107f457600080fd5b506108018a828b0161067f565b91505092959891949750929550565b60005b8381101561082b578181015183820152602001610813565b50506000910152565b6000815180845261084c816020860160208601610810565b601f01601f19169290920160200192915050565b6020815260006108736020830184610834565b9392505050565b60008060006060848603121561088f57600080fd5b83356001600160401b03808211156108a657600080fd5b6108b28783880161067f565b945060208601359150808211156108c857600080fd5b506108d58682870161067f565b92505060408401356001600160a01b03811681146108f257600080fd5b809150509250925092565b602081526001600160401b0382511660208201526000602083015161092d60408401826001600160401b03169052565b5060408301516060830152606083015160e06080840152610952610100840182610834565b90506080840151601f19808584030160a08601526109708383610834565b925060a08601519150808584030160c086015261098d8383610834565b925060c08601519150808584030160e0860152506103968282610834565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038281168282168181028316929181158285048214176109ea576109ea6109ab565b50505092915050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610a1c57610a1c6109ab565b92915050565b6001600160a01b03828116828216039080821115610a4257610a426109ab565b5092915050565b6001600160a01b03818116838216019080821115610a4257610a426109ab565b60006001600160401b03808a16835280891660208401525086604083015260e06060830152610a9b60e0830187610834565b8281036080840152610aad8187610834565b905082810360a0840152610ac18186610834565b905082810360c0840152610ad58185610834565b9a9950505050505050505050565b805161073481610711565b600082601f830112610aff57600080fd5b8151610b0d61069e82610658565b818152846020838601011115610b2257600080fd5b610709826020830160208701610810565b600080600080600080600060e0888a031215610b4e57600080fd5b610b5788610ae3565b9650610b6560208901610ae3565b95506040880151945060608801516001600160401b0380821115610b8857600080fd5b610b948b838c01610aee565b955060808a0151915080821115610baa57600080fd5b610bb68b838c01610aee565b945060a08a0151915080821115610bcc57600080fd5b610bd88b838c01610aee565b935060c08a0151915080821115610bee57600080fd5b506108018a828b01610aee565b60ff8181168382160190811115610a1c57610a1c6109ab56fea2646970667358221220eafeaa4cb9a6237116befbff2fe37e4ab4488846cb4b5a3df74e77228dfc6e5c64736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class SignatureVerifier__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.SignatureVerifier__factory = SignatureVerifier__factory;
SignatureVerifier__factory.bytecode = _bytecode;
SignatureVerifier__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbmF0dXJlVmVyaWZpZXJfX2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZmFjdG9yaWVzL2NvbnRyYWN0cy9saWJzL1NpZ25hdHVyZVZlcmlmaWVyX19mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLCtDQUErQztBQUMvQyxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLG1DQUtnQjtBQVFoQixNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsYUFBYTtnQkFDbkIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsUUFBUTtnQkFDdEIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxRQUFRO2FBQ2Y7U0FDRjtRQUNELElBQUksRUFBRSx1QkFBdUI7UUFDN0IsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLElBQUksRUFBRSxNQUFNO2dCQUNaLElBQUksRUFBRSxPQUFPO2FBQ2Q7U0FDRjtRQUNELElBQUksRUFBRSxrQkFBa0I7UUFDeEIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsVUFBVSxFQUFFO29CQUNWO3dCQUNFLFlBQVksRUFBRSxRQUFRO3dCQUN0QixJQUFJLEVBQUUsYUFBYTt3QkFDbkIsSUFBSSxFQUFFLFFBQVE7cUJBQ2Y7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLFFBQVE7d0JBQ3RCLElBQUksRUFBRSxXQUFXO3dCQUNqQixJQUFJLEVBQUUsUUFBUTtxQkFDZjtvQkFDRDt3QkFDRSxZQUFZLEVBQUUsU0FBUzt3QkFDdkIsSUFBSSxF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