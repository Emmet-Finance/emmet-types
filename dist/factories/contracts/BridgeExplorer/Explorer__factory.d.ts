import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Explorer, ExplorerInterface } from "../../../contracts/BridgeExplorer/Explorer";
type ExplorerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Explorer__factory extends ContractFactory {
    constructor(...args: ExplorerConstructorParams);
    getDeployTransaction(newData: AddressLike, newConsensus: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(newData: AddressLike, newConsensus: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<Explorer & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): Explorer__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b5060405162001ed838038062001ed8833981016040819052620000349162000083565b600280546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000bb565b80516001600160a01b03811681146200007e57600080fd5b919050565b600080604083850312156200009757600080fd5b620000a28362000066565b9150620000b26020840162000066565b90509250929050565b611e0d80620000cb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b0b7393511610097578063ca7090a211610066578063ca7090a214610286578063e2f273bd14610299578063ec616b88146102ac578063eca3c82f146102bf57600080fd5b8063b0b739351461020a578063b1014cd91461021d578063bdf7a87b14610247578063c59d48471461025a57600080fd5b806375b238fc116100d357806375b238fc1461018b5780638898971a146101b25780638ef3f761146101d2578063a5f94027146101e557600080fd5b80631b655054146101055780634aae13ca146101355780635350758f146101555780636dc3e77e14610176575b600080fd5b600254610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101486101433660046111cd565b6102e8565b60405161012c919061136f565b6101686101633660046114b8565b610589565b60405190815260200161012c565b61018961018436600461150d565b610687565b005b6101687fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6101c56101c036600461152a565b610715565b60405161012c919061154c565b600154610118906001600160a01b031681565b6101f86101f33660046114b8565b6108f9565b60405160ff909116815260200161012c565b6101896102183660046111cd565b6109f0565b61023061022b3660046114b8565b610d27565b6040805192835260ff90911660208301520161012c565b6101686102553660046115ce565b610d45565b60035460045460055460065460408051948552602085019390935291830152606082015260800161012c565b61018961029436600461150d565b610d83565b6101896102a736600461150d565b610e0c565b6101896102ba366004611628565b610e95565b6101686102cd366004611654565b6001600160801b031660009081526009602052604090205490565b6103846040518061022001604052806000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b0316815260200160008152602001600081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6001546040517f4aae13ca000000000000000000000000000000000000000000000000000000008152600481018490526000916001600160a01b031690634aae13ca90602401600060405180830381865afa1580156103e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040f9190810190611867565b90506000610437604480846101c001515161042a91906118b2565b6101c08501519190610f0b565b90506000602060001b826040516020016104529291906118cb565b60405160208183030381529060405280602001905181019061047491906118f1565b9050604051806102200160405280868152602001826060015181526020018460a001516001600160801b03168152602001826080015181526020016104bd856101a00151611033565b81526020016104d58361012001518460800151610d45565b81526020016104ed8361014001518460a00151610d45565b815260200184604001516001600160801b0316815260200184606001516001600160801b031681526020018461010001516001600160801b031681526020018460c001516001600160801b03168152602001846101200151815260200182610100015181526020018261012001518152602001826101400151815260200184610160015181526020018461018001518152509350505050919050565b6002546040517fc1733f6800000000000000000000000000000000000000000000000000000000815260009182916001600160a01b039091169063c1733f68906105d7908690600401611a33565b606060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190611a57565b602001519050806001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190611aa9565b9392505050565b6000546001600160a01b031633146106e65760405162461bcd60e51b815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546040517f8898971a00000000000000000000000000000000000000000000000000000000815260048101849052602481018390526060916000916001600160a01b0390911690638898971a90604401600060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107ac9190810190611ac2565b80519091508067ffffffffffffffff8111156107ca576107ca611382565b60405190808252806020026020018201604052801561089757816020015b6108846040518061022001604052806000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160801b0316815260200160006001600160801b0316815260200160008152602001600081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b8152602001906001900390816107e85790505b50925060005b818110156108f0576108cb8382815181106108ba576108ba611b85565b6020026020010151600001516102e8565b8482815181106108dd576108dd611b85565b602090810291909101015260010161089d565b50505092915050565b6002546040517fc1733f6800000000000000000000000000000000000000000000000000000000815260009182916001600160a01b039091169063c1733f6890610947908690600401611a33565b606060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190611a57565b602001519050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190611b9b565b6000546001600160a01b03163314610a4a5760405162461bcd60e51b815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064016106dd565b60008181526007602052604090205460ff1615610aa95760405162461bcd60e51b815260206004820152601b60248201527f5472616e73616374696f6e20616c72656164792075706461746564000000000060448201526064016106dd565b6000610ab4826102e8565b80519091508214610b075760405162461bcd60e51b815260206004820152601860248201527f556e7265636f676e697a6564207472616e73616374696f6e000000000000000060448201526064016106dd565b6000828152600760205260408120805460ff191660011790556005805491610b2e83611bb6565b91905055506008816101600151604051610b489190611bd0565b9081526040519081900360200190205460ff16610bac5760016008826101600151604051610b769190611bd0565b908152604051908190036020019020805491151560ff1990921691909117905560068054906000610ba683611bb6565b91905055505b6008816101800151604051610bc19190611bd0565b9081526040519081900360200190205460ff16610c255760016008826101800151604051610bef9190611bd0565b908152604051908190036020019020805491151560ff1990921691909117905560068054906000610c1f83611bb6565b91905055505b8060a0015160036000828254610c3b9190611bec565b909155505060025460e08201516040517fe22fe72f0000000000000000000000000000000000000000000000000000000081526001600160801b039091166004820152600091610cfb916001600160a01b039091169063e22fe72f9060240160a060405180830381865afa158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb9190611c4e565b6040015173ffffffffffffffffffffffffffffffffffffffff19166110bb565b9050610d0c81836101200151610d45565b60046000828254610d1d9190611bec565b9091555050505050565b600080610d3383610589565b9150610d3e836108f9565b9050915091565b6000806000610d5385610d27565b9092509050610d6660ff8216600a611d92565b610d708386611d9e565b610d7a9190611db5565b95945050505050565b6000546001600160a01b03163314610ddd5760405162461bcd60e51b815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064016106dd565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e665760405162461bcd60e51b815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064016106dd565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610eef5760405162461bcd60e51b815260206004820152601160248201527f556e617574686f72697365642063616c6c00000000000000000000000000000060448201526064016106dd565b6001600160801b03909116600090815260096020526040902055565b606081610f1981601f611bec565b1015610f675760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064016106dd565b610f718284611bec565b84511015610fc15760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016106dd565b606082158015610fe0576040519150600082526020820160405261102a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611019578051835260209283019201611001565b5050858452601f01601f1916604052505b50949350505050565b60008181805b82518110156110b357600083828151811061105657611056611b85565b016020015160f81c905060308110801590611072575060398111155b1561109e576110826030826118b2565b61108d84600a611d9e565b6110979190611bec565b92506110aa565b50600095945050505050565b50600101611039565b509392505050565b606060005b600c8110801561110657508281600c81106110dd576110dd611b85565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b1561111b5761111481611bb6565b90506110c0565b60008167ffffffffffffffff81111561113657611136611382565b6040519080825280601f01601f191660200182016040528015611160576020820181803683370190505b50905060005b828110156110b3578481600c811061118057611180611b85565b1a60f81b82828151811061119657611196611b85565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101611166565b6000602082840312156111df57600080fd5b5035919050565b60005b838110156112015781810151838201526020016111e9565b50506000910152565b600081518084526112228160208601602086016111e6565b601f01601f19169290920160200192915050565b6000610220825184526020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015161129560e08601826001600160801b03169052565b50610100838101516001600160801b03169085015261012080840151908501526101408084015190850152610160808401518186018390526112d98387018261120a565b9250505061018080840151858303828701526112f5838261120a565b925050506101a08084015185830382870152611311838261120a565b925050506101c0808401518583038287015261132d838261120a565b925050506101e08084015185830382870152611349838261120a565b925050506102008084015185830382870152611365838261120a565b9695505050505050565b6020815260006106806020830184611236565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff811182821017156113bc576113bc611382565b60405290565b604051610180810167ffffffffffffffff811182821017156113bc576113bc611382565b6040516060810167ffffffffffffffff811182821017156113bc576113bc611382565b604051601f8201601f1916810167ffffffffffffffff8111828210171561143257611432611382565b604052919050565b600067ffffffffffffffff82111561145457611454611382565b50601f01601f191660200190565b600082601f83011261147357600080fd5b81356114866114818261143a565b611409565b81815284602083860101111561149b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156114ca57600080fd5b813567ffffffffffffffff8111156114e157600080fd5b6114ed84828501611462565b949350505050565b6001600160a01b038116811461150a57600080fd5b50565b60006020828403121561151f57600080fd5b8135610680816114f5565b6000806040838503121561153d57600080fd5b50508035926020909101359150565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156115c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526115af858351611236565b94509285019290850190600101611575565b5092979650505050505050565b600080604083850312156115e157600080fd5b823567ffffffffffffffff8111156115f857600080fd5b61160485828601611462565b95602094909401359450505050565b6001600160801b038116811461150a57600080fd5b6000806040838503121561163b57600080fd5b823561164681611613565b946020939093013593505050565b60006020828403121561166657600080fd5b813561068081611613565b805161167c81611613565b919050565b600082601f83011261169257600080fd5b81516116a06114818261143a565b8181528460208386010111156116b557600080fd5b6114ed8260208301602087016111e6565b60006101e082840312156116d957600080fd5b6116e1611398565b905081518152602082015160208201526116fd60408301611671565b604082015261170e60608301611671565b606082015261171f60808301611671565b608082015261173060a08301611671565b60a082015261174160c08301611671565b60c082015261175260e08301611671565b60e0820152610100611765818401611671565b908201526101208281015167ffffffffffffffff8082111561178657600080fd5b61179286838701611681565b838501526101409250828501519150808211156117ae57600080fd5b6117ba86838701611681565b838501526101609250828501519150808211156117d657600080fd5b6117e286838701611681565b838501526101809250828501519150808211156117fe57600080fd5b61180a86838701611681565b838501526101a092508285015191508082111561182657600080fd5b61183286838701611681565b838501526101c092508285015191508082111561184e57600080fd5b5061185b85828601611681565b82840152505092915050565b60006020828403121561187957600080fd5b815167ffffffffffffffff81111561189057600080fd5b6114ed848285016116c6565b634e487b7160e01b600052601160045260246000fd5b818103818111156118c5576118c561189c565b92915050565b828152600082516118e38160208501602087016111e6565b919091016020019392505050565b60006020828403121561190357600080fd5b815167ffffffffffffffff8082111561191b57600080fd5b90830190610180828603121561193057600080fd5b6119386113c2565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015261197a60c08401611671565b60c082015261198b60e08401611671565b60e082015261010080840151838111156119a457600080fd5b6119b088828701611681565b82840152505061012080840151838111156119ca57600080fd5b6119d688828701611681565b82840152505061014080840151838111156119f057600080fd5b6119fc88828701611681565b8284015250506101608084015183811115611a1657600080fd5b611a2288828701611681565b918301919091525095945050505050565b602081526000610680602083018461120a565b805160ff8116811461167c57600080fd5b600060608284031215611a6957600080fd5b611a716113e6565b8251611a7c816114f5565b81526020830151611a8c816114f5565b6020820152611a9d60408401611a46565b60408201529392505050565b600060208284031215611abb57600080fd5b5051919050565b60006020808385031215611ad557600080fd5b825167ffffffffffffffff80821115611aed57600080fd5b818501915085601f830112611b0157600080fd5b815181811115611b1357611b13611382565b8060051b611b22858201611409565b9182528381018501918581019089841115611b3c57600080fd5b86860192505b83831015611b7857825185811115611b5a5760008081fd5b611b688b89838a01016116c6565b8352509186019190860190611b42565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bad57600080fd5b61068082611a46565b60006000198203611bc957611bc961189c565b5060010190565b60008251611be28184602087016111e6565b9190910192915050565b808201808211156118c5576118c561189c565b600060408284031215611c1157600080fd5b6040516040810181811067ffffffffffffffff82111715611c3457611c34611382565b604052825181526020928301519281019290925250919050565b600060a08284031215611c6057600080fd5b611c686113e6565b611c728484611bff565b8152611c818460408501611bff565b6020820152608083015173ffffffffffffffffffffffffffffffffffffffff1981168114611a9d57600080fd5b600181815b80851115611ce9578160001904821115611ccf57611ccf61189c565b80851615611cdc57918102915b93841c9390800290611cb3565b509250929050565b600082611d00575060016118c5565b81611d0d575060006118c5565b8160018114611d235760028114611d2d57611d49565b60019150506118c5565b60ff841115611d3e57611d3e61189c565b50506001821b6118c5565b5060208310610133831016604e8410600b8410161715611d6c575081810a6118c5565b611d768383611cae565b8060001904821115611d8a57611d8a61189c565b029392505050565b60006106808383611cf1565b80820281158282048414176118c5576118c561189c565b600082611dd257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209eeb67bd6761c66f065dde405dfe9cebd0f0a05342a90dde7a8b8481f1d2087e64736f6c63430008180033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newData";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "newConsensus";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ADMIN_ROLE";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "consensus";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "convertToUsd";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "converted";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "dataAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }];
        readonly name: "getPriceAndDecimals";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "price";
            readonly type: "int256";
        }, {
            readonly internalType: "uint8";
            readonly name: "decimals";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }];
        readonly name: "getPriceDecimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "decimals";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getStats";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bridgedInUSD";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "collectedFees";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "totalTransactions";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "uniqueAccounts";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }];
        readonly name: "getTokenPrice";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "price";
            readonly type: "int256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "txHash";
            readonly type: "bytes32";
        }];
        readonly name: "getTransaction";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "txHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "start";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "finish";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sentAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "receiveAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sentInUSD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "receivedInUSD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "fromChainId";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "toChainId";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint256";
                readonly name: "protocolFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "compensation";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "sender";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "recipient";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "fromToken";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "toToken";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "originalHash";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "destinationHash";
                readonly type: "string";
            }];
            readonly internalType: "struct Explorer.ExplorerTransaction";
            readonly name: "bridgeTransaction";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "batch";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }];
        readonly name: "getTransactions";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "txHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "start";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "finish";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sentAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "receiveAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sentInUSD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "receivedInUSD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "fromChainId";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "toChainId";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint256";
                readonly name: "protocolFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "compensation";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "sender";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "recipient";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "fromToken";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "toToken";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "originalHash";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "destinationHash";
                readonly type: "string";
            }];
            readonly internalType: "struct Explorer.ExplorerTransaction[]";
            readonly name: "bridgeTransactions";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "chainId";
            readonly type: "uint128";
        }];
        readonly name: "protocolFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "updateAdmin";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newConsensus";
            readonly type: "address";
        }];
        readonly name: "updateConsensus";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newData";
            readonly type: "address";
        }];
        readonly name: "updateData";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "chainId";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint256";
            readonly name: "newProtocolFee";
            readonly type: "uint256";
        }];
        readonly name: "updateProtocolFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "txHash";
            readonly type: "bytes32";
        }];
        readonly name: "updateTransaction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ExplorerInterface;
    static connect(address: string, runner?: ContractRunner | null): Explorer;
}
export {};
