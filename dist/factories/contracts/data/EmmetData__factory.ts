/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EmmetData,
  EmmetDataInterface,
} from "../../../contracts/data/EmmetData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DataAdmin",
    outputs: [
      {
        internalType: "contract IEmmetDataAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbolA",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbolB",
        type: "string",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "chainId",
        type: "uint128",
      },
      {
        internalType: "string",
        name: "fromToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "toToken",
        type: "string",
      },
    ],
    name: "estimateForeignCost",
    outputs: [
      {
        internalType: "uint256",
        name: "costs",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "chainId",
        type: "uint128",
      },
    ],
    name: "getChain",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "bridge",
        type: "string",
      },
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getIncomingTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skip",
        type: "uint256",
      },
    ],
    name: "getIncommingTransactions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "blockNumbers",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isOut",
        type: "bool",
      },
    ],
    name: "getIndexByHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeCoinName",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOutgoingTransaction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFeeERC20",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "sentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveAmount",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "toChainId",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "fromToken",
            type: "string",
          },
          {
            internalType: "string",
            name: "toToken",
            type: "string",
          },
          {
            internalType: "string",
            name: "to",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isSuccess",
            type: "bool",
          },
        ],
        internalType: "struct BridgeTypes.SendParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skip",
        type: "uint256",
      },
    ],
    name: "getOutgoingTransactions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFeeERC20",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "sentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveAmount",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "toChainId",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "fromToken",
            type: "string",
          },
          {
            internalType: "string",
            name: "toToken",
            type: "string",
          },
          {
            internalType: "string",
            name: "to",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isSuccess",
            type: "bool",
          },
        ],
        internalType: "struct BridgeTypes.SendParams[]",
        name: "records",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "toChainId",
        type: "uint128",
      },
      {
        internalType: "string",
        name: "fromToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "toToken",
        type: "string",
      },
    ],
    name: "getStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "enum BridgeTypes.Step[]",
            name: "outgoing",
            type: "uint8[]",
          },
          {
            internalType: "enum BridgeTypes.Step[]",
            name: "incoming",
            type: "uint8[]",
          },
          {
            internalType: "enum BridgeTypes.Step[]",
            name: "foreign",
            type: "uint8[]",
          },
        ],
        internalType: "struct BridgeTypes.TokenStrategy",
        name: "strategy",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "getToken",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct BridgeTypes.Token",
        name: "token",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ed238038062002ed28339810160408190526200003491620007d3565b6040516301ffc9a760e01b8152637ed3e99160e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000080573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a6919062000805565b6200010c576200010c620000c36001600160a01b03831662000132565b60405180606001604052806022815260200162002eb06022913960408051808201909152601081526f22b6b6b2ba2230ba309022b93937b91d60811b6020820152919062000150565b600080546001600160a01b0319166001600160a01b039290921691909117905562000906565b60606200014a6001600160a01b038316601462000181565b92915050565b6200015d83838362000391565b60405162461bcd60e51b815260040162000178919062000829565b60405180910390fd5b60608260006200019384600262000890565b620001a0906002620008aa565b6001600160401b03811115620001ba57620001ba620008c0565b6040519080825280601f01601f191660200182016040528015620001e5576020820181803683370190505b509050600360fc1b81600081518110620002035762000203620008d6565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620002355762000235620008d6565b60200101906001600160f81b031916908160001a90535060006200025b85600262000890565b62000268906001620008aa565b90505b6001811115620002ea576f181899199a1a9b1b9c1cb0b131b232b360811b83600f1660108110620002a057620002a0620008d6565b1a60f81b828281518110620002b957620002b9620008d6565b60200101906001600160f81b031916908160001a90535060049290921c91620002e281620008ec565b90506200026b565b50811562000389576200038960405180606001604052806023815260200162002e8d602391396200031b866200043f565b60408051808201909152601b81527f646f6573206e6f74206d6174636820746865206076616c7565603a000000000060208201526200035a89620004d8565b60408051808201909152600e81526d29ba3934b733b99022b93937b91d60911b60208201529392919062000555565b949350505050565b6040805160038082526080820190925260609160009190816020015b6060815260200190600190039081620003ad5790505090508481600081518110620003dc57620003dc620008d6565b60200260200101819052508381600181518110620003fe57620003fe620008d6565b60200260200101819052508281600281518110620004205762000420620008d6565b6020908102919091010152620004368162000564565b95945050505050565b606060006200044e83620005f7565b60010190506000816001600160401b03811115620004705762000470620008c0565b6040519080825280601f01601f1916602001820160405280156200049b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084620004a557509392505050565b60606200014a826200054c8160ff60806001600160801b0383119081029290921c60406001600160401b0382119081029190911c602063ffffffff82119081029190911c61ffff811160108181029290921c9490941160029094026004909202600890930294029390930101919091010190565b60010162000181565b6200015d8585858585620006df565b60606000825160005b818110156200058e576020818102860101515192909201916001016200056d565b50604051925060208301828101604052828452600092505b81831015620005ef5760208381028601810151805191019060005b81811015620005db578281015184820152602001620005c1565b5080830192505050600183019250620005a6565b505050919050565b60007a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000821062000640577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000820491506040015b6d04ee2d6d415b85acef810000000082106200066d576d04ee2d6d415b85acef8100000000820491506020015b662386f26fc1000082106200068c57662386f26fc10000820491506010015b6305f5e1008210620006a5576305f5e100820491506008015b6127108210620006ba57612710820491506004015b60648210620006cd576064820491506002015b600a8210620006da576001015b919050565b60408051600580825260c0820190925260609160009190816020015b6060815260200190600190039081620006fb57905050905086816000815181106200072a576200072a620008d6565b602002602001018190525085816001815181106200074c576200074c620008d6565b602002602001018190525084816002815181106200076e576200076e620008d6565b60200260200101819052508381600381518110620007905762000790620008d6565b60200260200101819052508281600481518110620007b257620007b2620008d6565b6020908102919091010152620007c88162000564565b979650505050505050565b600060208284031215620007e657600080fd5b81516001600160a01b0381168114620007fe57600080fd5b9392505050565b6000602082840312156200081857600080fd5b81518015158114620007fe57600080fd5b60006020808352835180602085015260005b8181101562000859578581018301518582016040015282016200083b565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200014a576200014a6200087a565b808201808211156200014a576200014a6200087a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620008fe57620008fe6200087a565b506000190190565b61257780620009166000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637120e7441161008c57806383a7272a1161006657806383a7272a1461022c578063a584242614610257578063c1733f681461026a578063d3c1422b146102b057600080fd5b80637120e744146101e457806371433cfb1461020457806376d34c371461021957600080fd5b80632db1e841116100bd5780632db1e8411461018f57806351f4ee6b146101af578063666a0deb146101d157600080fd5b806301ffc9a7146100e457806329fd8e761461014e5780632a7da1131461016f575b600080fd5b6101396100f236600461188f565b7fffffffff00000000000000000000000000000000000000000000000000000000167f7dadce6f000000000000000000000000000000000000000000000000000000001490565b60405190151581526020015b60405180910390f35b61016161015c3660046118e9565b6102d0565b604051908152602001610145565b61018261017d366004611a49565b6103f4565b6040516101459190611b24565b6101a261019d366004611b7c565b6104b2565b6040516101459190611caf565b6101c26101bd366004611d31565b610652565b60405161014593929190611d4e565b6101616101df366004611d87565b610834565b6101f76101f2366004611b7c565b6108bb565b6040516101459190611da0565b61020c6109ba565b6040516101459190611de4565b610161610227366004611a49565b610a49565b60005461023f906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b610161610265366004611df7565b610c30565b61027d610278366004611e2b565b610d7b565b6040805182516001600160a01b039081168252602080850151909116908201529181015160ff1690820152606001610145565b6102c36102be366004611d87565b610e1e565b6040516101459190611e60565b60008115610365576000546040517f70fba869000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b03909116906370fba86990602401602060405180830381865afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190611e73565b90506103ee565b6000546040517f9f657424000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b0390911690639f65742490602401602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190611e73565b90505b92915050565b61041860405180606001604052806060815260200160608152602001606081525090565b6000546040517f384ca92f0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063384ca92f9061046590879087908790600401611e8c565b600060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104aa9190810190611f57565b949350505050565b60606000806000610538868660008054906101000a90046001600160a01b03166001600160a01b0316636ec9f68a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190611e73565b610fd8565b92509250925060008367ffffffffffffffff81111561055957610559611937565b6040519080825280602002602001820160405280156105ef57816020015b6105dc60405180610120016040528060008152602001600015158152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016000151581525090565b8152602001906001900390816105775790505b509450825b8281106106475761060481610e1e565b8683815181106106165761061661200c565b60209081029190910101528015610647578161063181612038565b925050808061063f90612052565b9150506105f4565b505050505092915050565b600054606090819081906001600160a01b03166106b2576106b26040518060600160405280602181526020016125216021913960408051808201909152601081526f22b6b6b2ba2230ba309022b93937b91d60811b6020820152906110a7565b600080546040517fe22fe72f0000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff871660048201526001600160a01b039091169063e22fe72f9060240160a060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a91906120b8565b805151909150158015610781575060408101517fffffffffffffffffffffffff000000000000000000000000000000000000000016155b156107f6576107f66040518060400160405280601381526020017f556e737570706f7274656420636861696e4964000000000000000000000000008152506040518060400160405280601081526020016f22b6b6b2ba2230ba309022b93937b91d60811b8152506110a790919063ffffffff16565b61080381602001516110ed565b935061081281600001516110ed565b925061082b81604001516001600160a01b03191661113c565b93959294505050565b600080546040517f63f10bb2000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b03909116906363f10bb290602401602060405180830381865afa158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190611e73565b60606000806000610918868660008054906101000a90046001600160a01b03166001600160a01b031663c9f6a05a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050f573d6000803e3d6000fd5b92509250925060008367ffffffffffffffff81111561093957610939611937565b604051908082528060200260200182016040528015610962578160200160208202803683370190505b509450825b8281106106475761097781610834565b8683815181106109895761098961200c565b6020908102919091010152801561064757816109a481612038565b92505080806109b290612052565b915050610967565b60008054604080517f14cbfc0900000000000000000000000000000000000000000000000000000000815290516060936001600160a01b03909316926314cbfc0992600480820193918290030181865afa158015610a1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a449190810190612174565b905090565b600080546040517f384ca92f00000000000000000000000000000000000000000000000000000000815282916001600160a01b03169063384ca92f90610a9790889088908890600401611e8c565b600060405180830381865afa158015610ab4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610adc9190810190611f57565b6040015180519091506000805b82811015610b965760005484516001600160a01b03909116906311675fd2908a90879085908110610b1c57610b1c61200c565b60200260200101516040518363ffffffff1660e01b8152600401610b419291906121a9565b602060405180830381865afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190611e73565b610b8c90836121cf565b9150600101610ae9565b506000610ba288610652565b92505050610c24828260008054906101000a90046001600160a01b03166001600160a01b03166314cbfc096040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102659190810190612174565b98975050505050505050565b600080610c3c84610d7b565b90506000610c4984610d7b565b60208301519091506001600160a01b0316610cd057610cd0856040518060400160405280601481526020017f2d2070726963652066656564206e6f74207365740000000000000000000000008152506040518060400160405280601081526020016f22b6b6b2ba2230ba309022b93937b91d60811b8152506112569092919063ffffffff16565b60208101516001600160a01b0316610d5457610d54846040518060400160405280601481526020017f2d2070726963652066656564206e6f74207365740000000000000000000000008152506040518060400160405280601081526020016f22b6b6b2ba2230ba309022b93937b91d60811b8152506112569092919063ffffffff16565b610d71868360200151836020015184604001518560400151611261565b9695505050505050565b604080516060810182526000808252602082018190528183018190525491517fc1733f6800000000000000000000000000000000000000000000000000000000815290916001600160a01b03169063c1733f6890610ddd908590600401611de4565b606060405180830381865afa158015610dfa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee919061220f565b610e8360405180610120016040528060008152602001600015158152602001600081526020016000815260200160006fffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016000151581525090565b600080546040517f80329a66000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b03909116906380329a6690602401600060405180830381865afa158015610ee6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f0e9190810190612297565b60208082015184526000908401526040808201805191850191909152516060808501919091528101516fffffffffffffffffffffffffffffffff16608080850191909152810151909150610f83907fffffffffffffffffffffffffffffffff00000000000000000000000000000000166114d1565b8260a00181905250610fab8160a001516fffffffffffffffffffffffffffffffff19166114d1565b8260c00181905250610fc08160c001516110ed565b60e08084019190915201511515610100820152919050565b6000806000838511156110465760408051808201825260208082527f536b697020657863656564732073746f726564206172726179206c656e677468818301528251808401909352601083526f22b6b6b2ba2230ba309022b93937b91d60811b9083015261104691906110a7565b8361105186886121cf565b111561106857611061858561237e565b925061106c565b8592505b611076858561237e565b91508282101561108757600061109c565b611091838361237e565b61109c9060016121cf565b905093509350939050565b6110b182826115e3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e49190611de4565b60405180910390fd5b606060006110fe836000015161165b565b9050600061110f846020015161165b565b90508181604051602001611124929190612391565b60405160208183030381529060405292505050919050565b606060005b600c8110801561118757508281600c811061115e5761115e61200c565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b1561119c5761119581612038565b9050611141565b60008167ffffffffffffffff8111156111b7576111b7611937565b6040519080825280601f01601f1916602001820160405280156111e1576020820181803683370190505b50905060005b8281101561124e578481600c81106112015761120161200c565b1a60f81b8282815181106112175761121761200c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016111e7565b509392505050565b6110b183838361176d565b600080856001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c69190611e73565b90506000856001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c9190611e73565b9050811580611339575080155b15611349576000925050506114c8565b600085886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561138a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ae91906123c0565b6113b891906123db565b6113c390600a6124d8565b9050600085886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a91906123c0565b61143491906123db565b61143f90600a6124d8565b905081811160008161145a57611455838561237e565b611464565b611464848461237e565b90506000611472878e6124e7565b90508160000361148d5761148686826124fe565b97506114c0565b82156114a8578561149e83836124e7565b61148691906124fe565b856114b383836124fe565b6114bd91906124fe565b97505b505050505050505b95945050505050565b606060005b60108110801561151c57508281601081106114f3576114f361200c565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b156115315761152a81612038565b90506114d6565b60008167ffffffffffffffff81111561154c5761154c611937565b6040519080825280601f01601f191660200182016040528015611576576020820181803683370190505b50905060005b8281101561124e578481601081106115965761159661200c565b1a60f81b8282815181106115ac576115ac61200c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060010161157c565b604080516002808252606082810190935260009190816020015b60608152602001906001900390816115fd57905050905083816000815181106116285761162861200c565b602002602001018190525082816001815181106116475761164761200c565b60200260200101819052506104aa81611802565b606060005b6020811080156116a6575082816020811061167d5761167d61200c565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b156116bb576116b481612038565b9050611660565b60008167ffffffffffffffff8111156116d6576116d6611937565b6040519080825280601f01601f191660200182016040528015611700576020820181803683370190505b50905060005b8281101561124e578481602081106117205761172061200c565b1a60f81b8282815181106117365761173661200c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101611706565b6040805160038082526080820190925260609160009190816020015b606081526020019060019003908161178957905050905084816000815181106117b4576117b461200c565b602002602001018190525083816001815181106117d3576117d361200c565b602002602001018190525082816002815181106117f2576117f261200c565b60200260200101819052506114c8815b60606000825160005b8181101561182a5760208181028601015151929092019160010161180b565b50604051925060208301828101604052828452600092505b818310156118875760208381028601810151805191019060005b8181101561187457828101518482015260200161185c565b5080830192505050600183019250611842565b505050919050565b6000602082840312156118a157600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146118d157600080fd5b9392505050565b80151581146118e657600080fd5b50565b600080604083850312156118fc57600080fd5b82359150602083013561190e816118d8565b809150509250929050565b6fffffffffffffffffffffffffffffffff811681146118e657600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561197057611970611937565b60405290565b604051610120810167ffffffffffffffff8111828210171561197057611970611937565b604051601f8201601f1916810167ffffffffffffffff811182821017156119c3576119c3611937565b604052919050565b600067ffffffffffffffff8211156119e5576119e5611937565b50601f01601f191660200190565b600082601f830112611a0457600080fd5b8135611a17611a12826119cb565b61199a565b818152846020838601011115611a2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611a5e57600080fd5b8335611a6981611919565b9250602084013567ffffffffffffffff80821115611a8657600080fd5b611a92878388016119f3565b93506040860135915080821115611aa857600080fd5b50611ab5868287016119f3565b9150509250925092565b600f8110611add57634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452602080850194506020840160005b83811015611b1957611b09878351611abf565b9582019590820190600101611af6565b509495945050505050565b602081526000825160606020840152611b406080840182611ae1565b90506020840151601f1980858403016040860152611b5e8383611ae1565b92506040860151915080858403016060860152506114c88282611ae1565b60008060408385031215611b8f57600080fd5b50508035926020909101359150565b60005b83811015611bb9578181015183820152602001611ba1565b50506000910152565b60008151808452611bda816020860160208601611b9e565b601f01601f19169290920160200192915050565b6000610120825184526020830151611c0a602086018215159052565b5060408301516040850152606083015160608501526080830151611c4260808601826fffffffffffffffffffffffffffffffff169052565b5060a08301518160a0860152611c5a82860182611bc2565b91505060c083015184820360c0860152611c748282611bc2565b91505060e083015184820360e0860152611c8e8282611bc2565b91505061010080840151611ca58287018215159052565b5090949350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015611d24577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611d12858351611bee565b94509285019290850190600101611cd8565b5092979650505050505050565b600060208284031215611d4357600080fd5b81356118d181611919565b606081526000611d616060830186611bc2565b8281036020840152611d738186611bc2565b90508281036040840152610d718185611bc2565b600060208284031215611d9957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611dd857835183529284019291840191600101611dbc565b50909695505050505050565b6020815260006103eb6020830184611bc2565b600080600060608486031215611e0c57600080fd5b83359250602084013567ffffffffffffffff80821115611a8657600080fd5b600060208284031215611e3d57600080fd5b813567ffffffffffffffff811115611e5457600080fd5b6104aa848285016119f3565b6020815260006103eb6020830184611bee565b600060208284031215611e8557600080fd5b5051919050565b6fffffffffffffffffffffffffffffffff84168152606060208201526000611eb76060830185611bc2565b8281036040840152610d718185611bc2565b600082601f830112611eda57600080fd5b8151602067ffffffffffffffff821115611ef657611ef6611937565b8160051b611f0582820161199a565b9283528481018201928281019087851115611f1f57600080fd5b83870192505b84831015611f4c578251600f8110611f3d5760008081fd5b82529183019190830190611f25565b979650505050505050565b600060208284031215611f6957600080fd5b815167ffffffffffffffff80821115611f8157600080fd5b9083019060608286031215611f9557600080fd5b611f9d61194d565b825182811115611fac57600080fd5b611fb887828601611ec9565b825250602083015182811115611fcd57600080fd5b611fd987828601611ec9565b602083015250604083015182811115611ff157600080fd5b611ffd87828601611ec9565b60408301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019820361204b5761204b612022565b5060010190565b60008161206157612061612022565b506000190190565b60006040828403121561207b57600080fd5b6040516040810181811067ffffffffffffffff8211171561209e5761209e611937565b604052825181526020928301519281019290925250919050565b600060a082840312156120ca57600080fd5b6120d261194d565b6120dc8484612069565b81526120eb8460408501612069565b602082015260808301517fffffffffffffffffffffffff00000000000000000000000000000000000000008116811461212357600080fd5b60408201529392505050565b600082601f83011261214057600080fd5b815161214e611a12826119cb565b81815284602083860101111561216357600080fd5b6104aa826020830160208701611b9e565b60006020828403121561218657600080fd5b815167ffffffffffffffff81111561219d57600080fd5b6104aa8482850161212f565b6fffffffffffffffffffffffffffffffff83168152604081016118d16020830184611abf565b808201808211156103ee576103ee612022565b80516001600160a01b03811681146121f957600080fd5b919050565b805160ff811681146121f957600080fd5b60006060828403121561222157600080fd5b61222961194d565b612232836121e2565b8152612240602084016121e2565b6020820152612123604084016121fe565b80516121f981611919565b80517fffffffffffffffffffffffffffffffff00000000000000000000000000000000811681146121f957600080fd5b80516121f9816118d8565b6000602082840312156122a957600080fd5b815167ffffffffffffffff808211156122c157600080fd5b9083019061014082860312156122d657600080fd5b6122de611976565b82518152602083015160208201526040830151604082015261230260608401612251565b60608201526123136080840161225c565b608082015261232460a0840161225c565b60a08201526123368660c08501612069565b60c082015261010061234981850161228c565b60e08301526101208401518381111561236157600080fd5b61236d8882870161212f565b918301919091525095945050505050565b818103818111156103ee576103ee612022565b600083516123a3818460208801611b9e565b8351908301906123b7818360208801611b9e565b01949350505050565b6000602082840312156123d257600080fd5b6103eb826121fe565b60ff81811683821601908111156103ee576103ee612022565b600181815b8085111561242f57816000190482111561241557612415612022565b8085161561242257918102915b93841c93908002906123f9565b509250929050565b600082612446575060016103ee565b81612453575060006103ee565b816001811461246957600281146124735761248f565b60019150506103ee565b60ff84111561248457612484612022565b50506001821b6103ee565b5060208310610133831016604e8410600b84101617156124b2575081810a6103ee565b6124bc83836123f4565b80600019048211156124d0576124d0612022565b029392505050565b60006103eb60ff841683612437565b80820281158282048414176103ee576103ee612022565b60008261251b57634e487b7160e01b600052601260045260246000fd5b50049056fe4461746141646d696e206973206e6f742073657420696e20456d6d657444617461a26469706673582212203a085d8d3fa366c66af820add5c8215aa0dfa2ed15c8276f87de6baa6356cc2964736f6c63430008180033746f486578537472696e672876616c75652c6c656e6774682920606c656e677468603a2d20646f6573206e6f7420737570706f72742049456d6d65744461746141646d696e";

type EmmetDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmmetDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmmetData__factory extends ContractFactory {
  constructor(...args: EmmetDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    dataAdmin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(dataAdmin, overrides || {});
  }
  override deploy(
    dataAdmin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(dataAdmin, overrides || {}) as Promise<
      EmmetData & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EmmetData__factory {
    return super.connect(runner) as EmmetData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmmetDataInterface {
    return new Interface(_abi) as EmmetDataInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EmmetData {
    return new Contract(address, _abi, runner) as unknown as EmmetData;
  }
}
