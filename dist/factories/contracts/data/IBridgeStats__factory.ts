/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBridgeStats,
  IBridgeStatsInterface,
} from "../../../contracts/data/IBridgeStats";

const _abi = [
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeesUSD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uniqueAddresses",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "user",
        type: "string",
      },
    ],
    name: "getUserStats",
    outputs: [
      {
        internalType: "uint128",
        name: "received",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "sent",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBridgeStats__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeStatsInterface {
    return new Interface(_abi) as IBridgeStatsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBridgeStats {
    return new Contract(address, _abi, runner) as unknown as IBridgeStats;
  }
}
